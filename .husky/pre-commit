#!/bin/sh

# CI 환경 체크
is_ci_environment() {
  [ -n "$CI" ] || [ -n "$GITHUB_ACTIONS" ]
}

# CI 환경에서는 hook 스킵
if is_ci_environment; then
  exit 0
fi

# 스크립트 실패 시 즉시 중단
set -e

# pnpm이 설치되어 있으면 1, 설치되어 있지 않으면 0을 반환한다
PNPM_INSTALLED=$(pnpm -v > /dev/null 2>&1; echo $?)

if [ "$PNPM_INSTALLED" -ne 0 ]; then
  printf "\033[31m❌ pnpm이 설치되어 있지 않습니다. pnpm을 설치해주세요.\033[0m\n"
  exit 1
fi

# 패키지 매니저 검사
printf "\n📦 커밋 전 패키지 매니저 검사 중...\n"
if pnpm check:pnpm; then
  printf "\033[32m✓ 패키지 매니저 검사 완료\033[0m\n"
else
  printf "\033[31m❌ 패키지 매니저 검사 실패\033[0m\n"
  exit 1
fi

printf "\033[34m🔍 commit 하기 전 코드 품질 검사를 시작합니다...\033[0m\n"
START_TIME=$(date +%s)

# Prettier로 코드 스타일 검사
printf "\n📝 Prettier 검사 중...\n"
if pnpm format:fix; then
  printf "\033[32m✓ 코드 스타일 검사 완료\033[0m\n"
else
  printf "\033[31m❌ 코드 스타일 검사 실패\033[0m\n"
  exit 1
fi

# ESLint로 코드 품질 검사
printf "\n🔍 ESLint 검사 중...\n"
if pnpm lint:fix; then
  printf "\033[32m✓ 코드 품질 검사 완료\033[0m\n"
else
  printf "\033[31m❌ 코드 품질 검사 실패\033[0m\n"
  exit 1
fi

# staged 파일만 최종 검사
printf "\n⚡ 스테이징된 파일 최종 검사 중...\n"
if npx lint-staged; then
  printf "\033[32m✓ 스테이징된 파일 검사 완료\033[0m\n"
else
  printf "\033[31m❌ 스테이징된 파일 검사 실패\033[0m\n"
  exit 1
fi

END_TIME=$(date +%s)
DURATION=$((END_TIME - START_TIME))

printf "\n\033[32m✨ 모든 검사가 성공적으로 완료되었습니다! (소요시간: %s초)\033[0m\n" "$DURATION"
exit 0
