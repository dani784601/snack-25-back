/// [발전과제] 찜하기
/// 찜하기는 해당 레코드를 생성하는 것, 찜 취소는 해당 레코드를 삭제하는 것으로 처리
// model Wishlist {
///   /// 1. 기본 식별자 (Primary Identifiers)
///   /// Primary Key로 CUID v2를 사용한다
///   id        String   @id @default(cuid(2)) @db.Text

///   /// 2. 외래 키 필드 (Foreign Keys)
///   /// 유저 ID
///   userId    String   @db.Text
///   /// 상품 ID
///   productId String   @db.Text

///   /// 3. 필수 필드 (Required Fields)

///   /// 4. 선택적 필드 (Optional Fields)

///   /// 5. 타임스탬프 필드 (Timestamp Fields)
///   createdAt DateTime @default(now()) @db.Timestamptz(6)
///   updatedAt DateTime @updatedAt @db.Timestamptz(6)

///   /// 6. 관계 필드 (Relation Fields)
///   /// 찜하기를 누른 유저
///   user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
///   /// 찜하기를 받은 상품
///   product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

///   /// 8. 테이블명, 유니크 제약, 인덱스 설정 등
///   /// 테이블명을 명시적으로 지정(소문자, 복수형)
///   @@map("wishlists")

///   /// 한 유저가 같은 상품에 중복으로 좋아요할 수 없도록 복합 유니크 제약 설정
///   @@unique([userId, productId])

///   /// 성능 향상을 위한 인덱스 추가
///   @@index([userId])
///   @@index([productId])
/// }
