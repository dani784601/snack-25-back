/// 상품 카테고리
model Category {
  /// 1. 기본 식별자 (Primary Identifiers)
  /// Primary Key로 CUID v2를 사용한다 (예: aetqn2jftkh2aqgdko9nf3ps)
  id       String  @id @default(cuid(2)) @db.Text
  /// 부모 카테고리의 ID(cuid2, null일 경우 최상위 카테고리)
  /// A기업: 음료 > 탄산음료 > 사이다 > 제로칼로리 > 나랑드
  /// B기업: 음료 > 탄산음료 > 사이다 > 제로칼로리 > 나랑드
  parentId String? @db.Text

  /// 2. 외래 키 필드 (Foreign Keys)
  /// 기업 ID
  companyId String @db.Text

  /// 3. 필수 필드 (Required Fields)
  /// 카테고리명(여러 회사에서 같은 카테고리명이 있을 수 있으므로 중복에 제한을 두지 않아야 함)
  name     String
  /// 카테고리 활성화 여부
  isActive Boolean @default(true)

  /// 4. 선택적 필드 (Optional Fields)
  /// 발전과제: 카테고리 표시 순서
  /// displayOrder Int? @default(0)
  /// 발전과제: 카테고리 설명
  /// description  String? @db.Text

  /// 5. 타임스탬프 필드 (Timestamp Fields)
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  /// 6. 관계 필드 (Relation Fields)
  /// 상위(부모) 카테고리
  parent   Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id], onDelete: SetNull)
  /// 하위(자식) 카테고리들
  children Category[] @relation("CategoryHierarchy")
  /// 카테고리가 속한 기업
  company  Company    @relation(fields: [companyId], references: [id], onDelete: Cascade)

  /// 7. 역참조 필드 (Reverse Relation Fields)
  /// 카테고리는 여러 개의 상품을 가진다(Category has many Products)
  products Product[]

  /// 같은 회사 내의 같은 부모 카테고리 내에서 카테고리명은 고유해야 함
  @@unique([companyId, parentId, name])
  /// 성능 향상을 위해 parentId 인덱스 추가
  @@index([parentId])
  @@index([companyId])
  /// 8. 테이블명, 유니크 제약, 인덱스 설정 등
  /// 테이블명을 명시적으로 지정(소문자, 복수형)
  @@map("categories")
}
