/// 상품
model Product {
  /// 1. 기본 식별자 (Primary Identifiers)
  /// Primary Key로 CUID v2를 사용한다 (예: aetqn2jftkh2aqgdko9nf3ps)
  id String @id @default(cuid(2)) @db.Text

  /// 2. 외래 키 필드 (Foreign Keys)
  /// 카테고리 ID
  categoryId String @db.Text
  // parentCategoryId 필드는 혼란을 줄 수 있으므로 제거하거나 명확히 해야 함
  // 카테고리 계층 구조는 이미 Category 모델에 구현되어 있음

  /// 3. 필수 필드 (Required Fields)
  /// 상품명(다른 회사에서 같은 상품명이 있을 수 있으므로 중복에 제한을 두지 않음)
  name  String
  /// 상품 가격(기본값 0원)
  price Int    @default(0)

  /// 4. 선택적 필드 (Optional Fields)
  /// 상품 상세 설명
  description String? @db.Text
  /// 상품 이미지 URL
  imageUrl    String? @db.Text
  /// [발전과제] 재고 수량
  /// stockQuantity Int @default(0)
  /// [발전과제] 상품 재고 상태 (활성, 비활성, 품절 등)
  /// status String @default("active")

  /// 5. 타임스탬프 필드 (Timestamp Fields)
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  /// 6. 관계 필드 (Relation Fields)
  /// 상품 카테고리(상품은 카테고리에 속한다, Product belongs to Category)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Restrict)
  // 부모 카테고리 관계도 제거하거나 명확히 해야 함
  // parentCategory Category? @relation("ProductParentCategory", fields: [parentCategoryId], references: [id])

  /// 7. 역참조 필드 (Reverse Relation Fields)
  /// 상품은 여러 장바구니 항목(CartItem)을 가진다(Product has many CartItems, 1:N)
  cartItems         CartItem[]
  /// 상품은 여러 주문 요청 항목(OrderRequestItem)을 가진다(Product has many OrderRequestItems, 1:N)
  orderRequestItems OrderRequestItem[]
  /// 상품은 여러 주문 항목(OrderItem)을 가진다(Product has many OrderItems, 1:N)
  orderItems        OrderItem[]
  /// [발전과제] 상품은 여러 찜(Wishlists)을 가진다(Product has many Wishlists, 1:N)
  /// wishlists Wishlist[]

  /// 검색 최적화를 위한 인덱스
  @@index([name])
  @@index([categoryId])
  /// 8. 테이블명, 유니크 제약, 인덱스 설정 등
  /// 테이블명을 명시적으로 지정(소문자, 복수형)
  @@map("products")
}
